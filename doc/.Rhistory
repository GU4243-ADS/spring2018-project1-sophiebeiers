Test <- sqldf('select Year, sum(bully_yes) as sum, count(RespondentTargetID) as count from full_hs group by Year')
Test
Test <- sqldf('select Year, sum(bully_yes) as bullied, count(RespondentTargetID) as total, sum(bully_yes)/count(RespondentTargetID) as perc from full_hs group by Year')
Test
Test <- sqldf('select Year, sum(bully_yes) as bullied, count(RespondentTargetID) as total, (sum(bully_yes)/count(RespondentTargetID)) as perc from full_hs group by Year')
Test
Test <- sqldf('select Year, sum(bully_yes) as bullied, count(RespondentTargetID) as total, bullied/total as perc from full_hs group by Year')
6466/27210
Test <- sqldf('select Year, sum(bully_yes) as bullied, count(RespondentTargetID) as total, ((sum(bully_yes))/(count(RespondentTargetID))) as perc from full_hs group by Year')
Test
By_year <- sqldf('select Year, sum(bully_yes) as bullied, count(RespondentTargetID) as total from full_hs group by Year')
By_year$freq <- By_year$bullied/By_year$total
By_year
sqldf('select * where bully_yes = 1 from full_hs group by Year')
sqldf('select * where 'bully_yes' = 1 from full_hs group by Year')
sqldf('select *, where bully_yes = 1 from full_hs group by Year')
test <- sqldf('select *, where bully_yes = 1 from full_hs group by Year')
test <- sqldf('select * where bully_yes = 1 from full_hs group by Year')
test <- sqldf('select *  from full_hs where bully_yes = 1 group by Year')
test
test <- sqldf('select count(bully_yes) as bullied, Year from full_hs where bully_yes = 1 group by Year')
test
test <- sqldf('select count(bully_yes = 1) as bullied, Year from full_hs where bully_yes = 1 group by Year')
test
test <- sqldf('select count(bully_yes = 1) as bullied, Year from full_hs group by Year')
test1 <- sqldf('select count(bully_yes = 0) as not_bullied, Year from full_hs group by Year')
test1
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gapminder)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gapminder)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- p + geom_point() # then tell it what to map
p <- p + scale_x_log10()
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- p + geom_point() # then tell it what to map
p <- p + scale_x_log10()
p
p <- p + geom_point(aes(color = continent))
p
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp))
p <- p + geom_point(aes(color = continent)) # then tell it what to map
p <- p + scale_x_log10()
p <- p + geom_smooth() # goes through
p
install.packages("ggthemes")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gapminder)
library(ggthemes)
p <- s
s <- p
s + theme_economist()
s
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native",
"CXXFLAGS= -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined",
file = M, sep = "\n", append = TRUE)
cat("\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
getwd
getwd()
library(digest)
?digest
head(spooky)
setwd("~/Documents/GitHub/spring2018-project1-sophiebeiers/doc")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(tidytext)
library(topicmodels)
library(wordcloud)
library(ggridges)
source("./lib/multiplot.R")
spooky <- read.csv('./data/spooky.csv', as.is = TRUE)
sum(is.na(spooky)) # no NA's in data
spooky$author <- as.factor(spooky$author) # Make "author" a factor
head(spooky)
spooky_wrd <- spooky %>%
unnest_tokens(word, text) %>%
count(author, word, sort = TRUE) %>% # sorts by most common words
ungroup()
head(spooky_wrd)
library(tm)
corpus <- tm_map(spooky, stripWhitespace)
dtm <- DocumentTermMatrix(spooky)
head(spooky_wrd)
head(spooky)
View(spooky)
filter(spooky, id == id22965)
filter(spooky, id == 'id22965')
stop_words
filter(stop_words, word == "I")
filter(spooky_wrd, word == "I")
head(spooky_wrd)
as.data.frame(spooky_wrd)
filter(spooky_wrd, word == "I")
filter(spooky_wrd, author == "EAP")
filter(spooky_wrd, word == "i")
filter(spooky_wrd, word == "we")
filter(spooky_wrd, word == "you")
pronouns <- c("i", "we", "us", "they", "them", "he", "she", "you", "him", "her")
filter(spooky_wrd, word %in% pronouns)
spooky_pronouns <- filter(spooky_wrd, word %in% pronouns)
ggplot(spooky_pronouns, aes = (x = word)) +
geom_bar()
ggplot(spooky_pronouns, aes = (x = word)) +
geom_bar(aes(x = word))
ggplot(spooky_pronouns, aes = (x = word)) +
geom_bar(aes(x = word), group = author)
ggplot(spooky_pronouns) +
geom_bar(aes(x = word), color = author)
spooky_pronouns
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word)) +
geom_bar(aes(color = author, group = author))
spooky_pronouns
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n)) +
geom_bar(aes(color = author, group = author))
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n), stat= "identity") +
geom_bar(aes(color = author, group = author))
?geom_bar
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n), ) +
geom_bar(aes(color = author, group = author, stat= "identity"))
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n)) +
geom_bar(aes(color = author, group = author), stat= "identity")
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n)) +
geom_bar(aes(color = author, group = author), stat= "identity", positon = fill)
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n)) +
geom_bar(aes(color = author, group = author, fill = author), stat= "identity", positon = fill)
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = word, y = n)) +
geom_bar(aes(color = author, fill = author), stat= "identity", positon = fill)
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat= "identity", positon = fill)
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = reorder(word, -n), y = n)) +
geom_bar(aes(color = author, fill = author), stat= "identity", positon = fill)
total_wrds <- spooky_wrd %>%
group_by(author) %>%
summarize(total = sum(n))
spooky_wrd <- left_join(spooky_wrd, total_wrds, by = "author")
spooky_wrd_clean <- spooky_wrd %>%
anti_join(stop_words, by = "word") # rids of stopwords
spooky_wrd_clean <- spooky_wrd_clean %>%
group_by(author) %>%
mutate(rank = row_number(), freq = n/total) # added rank and frequency values
spooky_wrd_clean
MWS_10words <- spooky_wrd_clean %>%
filter(author == "MWS") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n)) %>%
filter(rank <= 10)
EAP_10words <- spooky_wrd_clean %>%
filter(author == "EAP") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n)) %>%
filter(rank <= 10)
HPL_10words <- spooky_wrd_clean %>%
filter(author == "HPL") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n)) %>%
filter(rank <= 10)
top10 <- rbind(HPL_10words, EAP_10words)
top10 <- rbind(top10, MWS_10words)
top10
v1 <- spooky_wrd_clean %>%
ggplot(aes(x = total)) +
geom_bar(aes(color = author, group = author)) +
theme_light() +
facet_wrap(~author)
v1
v1
top10 %>%
ggplot(aes(rank, freq, color = author)) +
geom_line(size = 1.1) +
scale_x_log10() +
scale_y_log10()
top10
top10 %>%
ggplot(aes(x = word, y = freq * 100)) +
geom_bar(aes(color = author, fill = author), stat= "identity", positon = fill))
top10 %>%
ggplot(aes(x = word, y = freq * 100) +
geom_bar(aes(color = author, fill = author), stat= "identity", positon = fill))
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar() +
facet_wrap(~author)
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar() + stat = "identity") +
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar(stat = 'identity') +
facet_wrap(~author)
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar(stat = 'identity') +
facet_wrap(~author) +
CoordFlip
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar(stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar(color = freq, stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10
top10 %>%
ggplot(aes(x = word, y = freq * 100))+
geom_bar(color = n, stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(aes(x = reorder(word, freq), y = freq * 100))+
geom_bar(stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(aes(x = reorder(word, freq), y = freq * 100), color = author)+
geom_bar(stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(aes(x = reorder(word, freq), y = freq * 100), color = author)+
geom_bar(color = author, stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(., aes(x = reorder(word, freq), y = freq * 100)) +
geom_bar(aes(color = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(., aes(x = reorder(word, freq), y = freq * 100)) +
geom_bar(aes(color = author, fill = author), stat = 'identity', position = fill) +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(., aes(x = reorder(word, freq), y = freq * 100)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip()
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light()
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light() +
xlab("Number of Occurences") +
ylab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = reorder(word, -n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = "identity") +
xlab("Pronouns") +
ylab("Number of Occurences")
spooky_wrd %>%
filter(word %in% pronouns) %>%
ggplot(., aes(x = reorder(word, -n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = "identity") +
xlab("Pronouns") +
ylab("Number of Occurences") +
theme_light()
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author, switch = "both") +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author, switch = "y") +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author, switch = "x") +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author, strip.position = c("top", "bottom", "left", "right")) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author, strip.position = c("right")) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
top10 %>%
ggplot(., aes(x = reorder(word, n), y = n)) +
geom_bar(aes(color = author, fill = author), stat = 'identity') +
facet_wrap(~author) +
coord_flip() +
theme_light() +
ylab("Number of Occurences") +
xlab("Most Common Words")
wordcloud(EAP_10words, freq, max.words = 10, color = c("purple4", "red4", "black"))
head(EAP_10words)
wordcloud(EAP_10words, n, max.words = 10, color = c("purple4", "red4", "black"))
words <- names(table(EAP_10words$word))
words <- names(table(EAP_10words$word))
freqs <- table(EAP_10words$word)
wordcloud(words, freqs, max.words = 10, color = c("purple4", "red4", "black"))
freqs <- table(EAP_10words$freq)
wordcloud(words, freqs, max.words = 10, color = c("purple4", "red4", "black"))
words <- names(table(spooky_wrd$word))
freqs <- table(spooky_wrd$word)
head(sort(freqs, decreasing = TRUE))
wordcloud(words, freqs, max.words = 30, color = c("purple4", "red4", "black"))
words <- names(table(spooky_wrd$word))
freqs <- table(spooky_wrd$word)
head(sort(freqs, decreasing = TRUE))
wordcloud(words, freqs, max.words = 50, color = c("purple4", "red4", "black"))
words <- names(table(spooky_wrd_clean$word))
freqs <- table(spooky_wrd_clean$word)
head(sort(freqs, decreasing = TRUE))
wordcloud(words, freqs, max.words = 50, color = c("purple4", "red4", "black"))
spooky_wrd_clean
MWSwords <- spooky_wrd_clean %>%
filter(author == "MWS") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n)) %>%
head(MWSwords)
MWSwords <- spooky_wrd_clean %>%
filter(author == "MWS") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n))
head(MWSwords)
wordsMWS <- names(table(MWSwords$word))
freqsMWS <- table(MWSwordsn$word)
wordsMWS <- names(table(MWSwords$word))
freqsMWS <- table(MWSwords$word)
head(sort(freqsMWS, decreasing = TRUE))
wordcloud(wordsMWS, freqsMWS, max.words = 50, color = c("purple4", "red4", "black"))
head(sort(freqsMWS, decreasing = TRUE))
wordsMWS <- MWSwords$word
freqsMWS <- MWSwords$freq
head(sort(freqsMWS, decreasing = TRUE))
wordcloud(wordsMWS, freqsMWS, max.words = 50, color = c("purple4", "red4", "black"))
HPLwords <- spooky_wrd_clean %>%
filter(author == "HPL") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n))
EAPwords <- spooky_wrd_clean %>%
filter(author == "EAP") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n))
MWSwc <- wordcloud(wordsMWS, freqsMWS, max.words = 50, colors = brewer.pal(8, "Dark2"))
MWSwc <- wordcloud(wordsMWS, freqsMWS, max.words = 100, colors = brewer.pal(8, "Dark2"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, min.freq = 1, max.words = 75, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(8, "Dark2"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 75, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(8, "Dark2"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(8, "Dark2"))
#dev.off()
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Paired"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Pastel"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Pastel1"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Accent"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(8, "Accent"))
MWSwc <- wordcloud(words = wordsMWS, freq = freqsMWS, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MWSwc <- wordcloud(words = MSWwords$word, freq = MSW$freq, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MWSwc <- wordcloud(words = MSWwords$word, freq = MSWwords$freq, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MWSwords <- spooky_wrd_clean %>%
filter(author == "MWS") %>%
mutate(freq = n/total, rank = row_number()) %>%
arrange(desc(n))
MWSwc <- wordcloud(words = MSWwords$word, freq = MSWwords$freq, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MSWwords
MWSwc <- wordcloud(words = MWSwords$word, freq = MWSwords$freq, max.words = 100, random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
HPLwc <- wordcloud(words = HPLwords$word, freq = HPLwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
EAPwc <- wordcloud(words = EAPwords$word, freq = EAPwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
layout <- matrix(c(1, 2, 1, 3), 2, 2, byrow = TRUE)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
?multiplot
layout <- matrix(c(1, 2, 3), 1, 1, byrow = TRUE)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
layout <- matrix(c(1, 2, 3), 1, 1)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
layout
layout <- matrix(c(1, 2, 3), 1, 3)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
layout
layout <- matrix(c(1, 2, 3), 1, 3, byrow = TRUE)
layout <- matrix(c(1, 2, 3), 1, 3, byrow = TRUE)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
MWSwc <- wordcloud(words = MWSwords$word, freq = MWSwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
HPLwc <- wordcloud(words = HPLwords$word, freq = HPLwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
EAPwc <- wordcloud(words = EAPwords$word, freq = EAPwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
layout <- matrix(c(1, 2, 3), 1, 3, byrow = TRUE)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
layout
source("./lib/multiplot.R")
layout <- matrix(c(1, 2, 3), 1, 3, byrow = TRUE)
multiplot(MWSwc, HPLwc, EAPwc, layout = layout)
MWSwc
MWSwc <- wordcloud(words = MWSwords$word, freq = MWSwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"))
MWSwc
wordcloud(words = MWSwords$word, freq = MWSwords$freq, max.words = 100,
random.order = FALSE, rot.per = 0.35, colors = brewer.pal(6, "Dark2"), main = "hi")
?wordcloud
system('clang++ -v')
sudo xcodebuild -license
"sudo xcodebuild -license"
sudo xcodebuild -license
system('clang++ -v')
system('clang++ -v')
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library("rstan")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
